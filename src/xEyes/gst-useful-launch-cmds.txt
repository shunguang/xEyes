1. SV3C camera
gst-launch-1.0 rtspsrc location="rtsp://192.168.1.5/11" ! rtph264depay ! h264parse ! omxh264dec ! nveglglessink window-x=100 window-y=100 window-width=640 window-height=360


2.save to mp4 file
//tested working
gst-launch-1.0 -e rtspsrc location="rtsp://192.168.1.5/11" ! rtph264depay ! h264parse ! mp4mux ! filesink location=~/camera.mp4
or
gst-launch-1.0 -e rtspsrc location="rtsp://192.168.1.5/11" ! rtph264depay ! h264parse ! splitmuxsink location=file-%03d.mp4

//untested 
gst-launch-1.0 -e rtspsrc location=rtsp://admin:pass@192.168.85.7/rtsph2641080p protocols=tcp ! rtph264depay ! h264parse ! mp4mux ! filesink location=~/camera.mp4

2. recording send re-streaming

I tried your pipeline with 'nvcamerasrc' as the video source and it works! I also modified the pipeline for video recording and for sending stream over network by TCP only without the preview queue. So, it goes like this :

gst-launch-1.0 avimux name=mux
! filesink location=/media/nvidia/SSDJetson/test.mp4 nvcamerasrc fpsRange="30.0 30.0"
! 'video/x-raw(memory:NVMM), width=(int)1920, height=(int)1080, format=(string)I420, framerate=(fraction)30/1' 
! omxh264enc bitrate=14000000 control-rate=variable 
! tee name=tsplit
! queue ! h264parse ! mux.video_0 tsplit.
! queue ! h264parse ! queue ! matroskamux
! queue leaky=2 ! tcpserversink host=192.x.x.x port=7001